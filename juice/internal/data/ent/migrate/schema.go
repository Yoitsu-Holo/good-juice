// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UserBaseInfoColumns holds the columns for the "user_base_info" table.
	UserBaseInfoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeUint64, Unique: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "sex", Type: field.TypeInt8},
		{Name: "birth", Type: field.TypeTime, Nullable: true},
		{Name: "area", Type: field.TypeInt32},
		{Name: "user_profile", Type: field.TypeString, Nullable: true},
		{Name: "user_profile_photo_url", Type: field.TypeString, Nullable: true},
		{Name: "follow_count", Type: field.TypeInt32},
		{Name: "fan_count", Type: field.TypeInt32},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// UserBaseInfoTable holds the schema information for the "user_base_info" table.
	UserBaseInfoTable = &schema.Table{
		Name:       "user_base_info",
		Columns:    UserBaseInfoColumns,
		PrimaryKey: []*schema.Column{UserBaseInfoColumns[0]},
	}
	// UserFollowInfoColumns holds the columns for the "user_follow_info" table.
	UserFollowInfoColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeUint64},
		{Name: "follow_id", Type: field.TypeUint64},
		{Name: "status", Type: field.TypeInt8},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// UserFollowInfoTable holds the schema information for the "user_follow_info" table.
	UserFollowInfoTable = &schema.Table{
		Name:       "user_follow_info",
		Columns:    UserFollowInfoColumns,
		PrimaryKey: []*schema.Column{UserFollowInfoColumns[0]},
	}
	// UserPasswordColumns holds the columns for the "user_password" table.
	UserPasswordColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeUint64, Unique: true, Nullable: true},
		{Name: "salt", Type: field.TypeString},
		{Name: "pwd", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// UserPasswordTable holds the schema information for the "user_password" table.
	UserPasswordTable = &schema.Table{
		Name:       "user_password",
		Columns:    UserPasswordColumns,
		PrimaryKey: []*schema.Column{UserPasswordColumns[0]},
	}
	// VideoCollectionColumns holds the columns for the "video_collection" table.
	VideoCollectionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "video_id", Type: field.TypeInt},
		{Name: "status", Type: field.TypeInt8},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// VideoCollectionTable holds the schema information for the "video_collection" table.
	VideoCollectionTable = &schema.Table{
		Name:       "video_collection",
		Columns:    VideoCollectionColumns,
		PrimaryKey: []*schema.Column{VideoCollectionColumns[0]},
	}
	// VideoCommentColumns holds the columns for the "video_comment" table.
	VideoCommentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "comment_id", Type: field.TypeInt, Unique: true},
		{Name: "pcomment_id", Type: field.TypeInt},
		{Name: "video_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "comment_text", Type: field.TypeString, Nullable: true},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// VideoCommentTable holds the schema information for the "video_comment" table.
	VideoCommentTable = &schema.Table{
		Name:       "video_comment",
		Columns:    VideoCommentColumns,
		PrimaryKey: []*schema.Column{VideoCommentColumns[0]},
	}
	// VideoLikeColumns holds the columns for the "video_like" table.
	VideoLikeColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "video_id", Type: field.TypeInt},
		{Name: "status", Type: field.TypeInt8},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// VideoLikeTable holds the schema information for the "video_like" table.
	VideoLikeTable = &schema.Table{
		Name:       "video_like",
		Columns:    VideoLikeColumns,
		PrimaryKey: []*schema.Column{VideoLikeColumns[0]},
	}
	// VideoMetadataColumns holds the columns for the "video_metadata" table.
	VideoMetadataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "video_id", Type: field.TypeInt, Unique: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "cover_url", Type: field.TypeString},
		{Name: "video_url", Type: field.TypeString},
		{Name: "video_intro", Type: field.TypeString, Nullable: true},
		{Name: "video_type", Type: field.TypeInt},
		{Name: "publish_address", Type: field.TypeInt32},
		{Name: "create_time", Type: field.TypeTime, Nullable: true},
		{Name: "update_time", Type: field.TypeTime, Nullable: true},
	}
	// VideoMetadataTable holds the schema information for the "video_metadata" table.
	VideoMetadataTable = &schema.Table{
		Name:       "video_metadata",
		Columns:    VideoMetadataColumns,
		PrimaryKey: []*schema.Column{VideoMetadataColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UserBaseInfoTable,
		UserFollowInfoTable,
		UserPasswordTable,
		VideoCollectionTable,
		VideoCommentTable,
		VideoLikeTable,
		VideoMetadataTable,
	}
)

func init() {
	UserBaseInfoTable.Annotation = &entsql.Annotation{
		Table: "user_base_info",
	}
	UserFollowInfoTable.Annotation = &entsql.Annotation{
		Table: "user_follow_info",
	}
	UserPasswordTable.Annotation = &entsql.Annotation{
		Table: "user_password",
	}
	VideoCollectionTable.Annotation = &entsql.Annotation{
		Table: "video_collection",
	}
	VideoCommentTable.Annotation = &entsql.Annotation{
		Table: "video_comment",
	}
	VideoLikeTable.Annotation = &entsql.Annotation{
		Table: "video_like",
	}
}

// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// UserBaseInfosColumns holds the columns for the "user_base_infos" table.
	UserBaseInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Unique: true, SchemaType: map[string]string{"mysql": "BIGINTUNSIGNED"}},
		{Name: "username", Type: field.TypeString, SchemaType: map[string]string{"mysql": "CHAR(30)"}},
		{Name: "sex", Type: field.TypeInt8, SchemaType: map[string]string{"mysql": "TINYINT"}},
		{Name: "birth", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATE"}},
		{Name: "area", Type: field.TypeInt32, SchemaType: map[string]string{"mysql": "INT"}},
		{Name: "user_profile", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "CHAR(255)"}},
		{Name: "user_profile_photo_url", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "CHAR(255)"}},
		{Name: "follow_count", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "INT"}},
		{Name: "fan_count", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "INT"}},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
	}
	// UserBaseInfosTable holds the schema information for the "user_base_infos" table.
	UserBaseInfosTable = &schema.Table{
		Name:       "user_base_infos",
		Columns:    UserBaseInfosColumns,
		PrimaryKey: []*schema.Column{UserBaseInfosColumns[0]},
	}
	// UserFollowInfosColumns holds the columns for the "user_follow_infos" table.
	UserFollowInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINTUNSIGNED"}},
		{Name: "follow_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINTUNSIGNED"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "TINYINT"}},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
	}
	// UserFollowInfosTable holds the schema information for the "user_follow_infos" table.
	UserFollowInfosTable = &schema.Table{
		Name:       "user_follow_infos",
		Columns:    UserFollowInfosColumns,
		PrimaryKey: []*schema.Column{UserFollowInfosColumns[0]},
	}
	// UserPasswordsColumns holds the columns for the "user_passwords" table.
	UserPasswordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Unique: true, Nullable: true, SchemaType: map[string]string{"mysql": "BIGINTUNSIGNED"}},
		{Name: "salt", Type: field.TypeString, SchemaType: map[string]string{"mysql": "CHAR(64)"}},
		{Name: "pwd", Type: field.TypeString, SchemaType: map[string]string{"mysql": "CHAR(64)"}},
	}
	// UserPasswordsTable holds the schema information for the "user_passwords" table.
	UserPasswordsTable = &schema.Table{
		Name:       "user_passwords",
		Columns:    UserPasswordsColumns,
		PrimaryKey: []*schema.Column{UserPasswordsColumns[0]},
	}
	// VideoCollectionsColumns holds the columns for the "video_collections" table.
	VideoCollectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "video_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "TINYINT"}},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
	}
	// VideoCollectionsTable holds the schema information for the "video_collections" table.
	VideoCollectionsTable = &schema.Table{
		Name:       "video_collections",
		Columns:    VideoCollectionsColumns,
		PrimaryKey: []*schema.Column{VideoCollectionsColumns[0]},
	}
	// VideoCommentsColumns holds the columns for the "video_comments" table.
	VideoCommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "comment_id", Type: field.TypeInt64, Unique: true, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "pcomment_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "video_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "user_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "comment_text", Type: field.TypeString, Nullable: true, Size: 2147483647, SchemaType: map[string]string{"mysql": "TEXT"}},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
	}
	// VideoCommentsTable holds the schema information for the "video_comments" table.
	VideoCommentsTable = &schema.Table{
		Name:       "video_comments",
		Columns:    VideoCommentsColumns,
		PrimaryKey: []*schema.Column{VideoCommentsColumns[0]},
	}
	// VideoLikesColumns holds the columns for the "video_likes" table.
	VideoLikesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "video_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "status", Type: field.TypeInt8, Default: 1, SchemaType: map[string]string{"mysql": "TINYINT"}},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
	}
	// VideoLikesTable holds the schema information for the "video_likes" table.
	VideoLikesTable = &schema.Table{
		Name:       "video_likes",
		Columns:    VideoLikesColumns,
		PrimaryKey: []*schema.Column{VideoLikesColumns[0]},
	}
	// VideoMetadataColumns holds the columns for the "video_metadata" table.
	VideoMetadataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "video_id", Type: field.TypeInt64, Unique: true, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "user_id", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "cover_url", Type: field.TypeString, SchemaType: map[string]string{"mysql": "CHAR(255)"}},
		{Name: "video_url", Type: field.TypeString, SchemaType: map[string]string{"mysql": "CHAR(255)"}},
		{Name: "video_intro", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "CHAR(255)"}},
		{Name: "video_type", Type: field.TypeInt64, SchemaType: map[string]string{"mysql": "BIGINT"}},
		{Name: "publish_address", Type: field.TypeInt32, Default: 0, SchemaType: map[string]string{"mysql": "INT"}},
		{Name: "create_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
		{Name: "update_time", Type: field.TypeTime, SchemaType: map[string]string{"mysql": "DATETIME"}},
	}
	// VideoMetadataTable holds the schema information for the "video_metadata" table.
	VideoMetadataTable = &schema.Table{
		Name:       "video_metadata",
		Columns:    VideoMetadataColumns,
		PrimaryKey: []*schema.Column{VideoMetadataColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		UserBaseInfosTable,
		UserFollowInfosTable,
		UserPasswordsTable,
		VideoCollectionsTable,
		VideoCommentsTable,
		VideoLikesTable,
		VideoMetadataTable,
	}
)

func init() {
}

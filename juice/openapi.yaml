# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/user_basic/info:
        get:
            tags:
                - UserBasic
            description: 获取用户信息
            operationId: UserBasic_GetUserInfo
            parameters:
                - name: userIdentity.userId
                  in: query
                  schema:
                    type: string
                - name: userIdentity.token
                  in: query
                  schema:
                    type: string
                - name: userIdentity.timestampe
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user_basic/login:
        post:
            tags:
                - UserBasic
            description: 用户登陆
            operationId: UserBasic_UserLogin
            parameters:
                - name: userIdentity.userId
                  in: query
                  schema:
                    type: string
                - name: userIdentity.token
                  in: query
                  schema:
                    type: string
                - name: userIdentity.timestampe
                  in: query
                  schema:
                    type: string
                - name: userName
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserLoginResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user_basic/register:
        post:
            tags:
                - UserBasic
            description: 用户注册
            operationId: UserBasic_UserRegister
            parameters:
                - name: userIdentity.userId
                  in: query
                  schema:
                    type: string
                - name: userIdentity.token
                  in: query
                  schema:
                    type: string
                - name: userIdentity.timestampe
                  in: query
                  schema:
                    type: string
                - name: userName
                  in: query
                  schema:
                    type: string
                - name: password
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserRegisterResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user_basic/search:
        get:
            tags:
                - UserBasic
            description: 搜索用户
            operationId: UserBasic_SearchUserList
            parameters:
                - name: userIdentity.userId
                  in: query
                  schema:
                    type: string
                - name: userIdentity.token
                  in: query
                  schema:
                    type: string
                - name: userIdentity.timestampe
                  in: query
                  schema:
                    type: string
                - name: usersKeywords
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user_basic/update:
        post:
            tags:
                - UserBasic
            description: 用户信息更新接口
            operationId: UserBasic_UpdateUserInfo
            parameters:
                - name: userIdentity.userId
                  in: query
                  schema:
                    type: string
                - name: userIdentity.token
                  in: query
                  schema:
                    type: string
                - name: userIdentity.timestampe
                  in: query
                  schema:
                    type: string
                - name: userIntro
                  in: query
                  schema:
                    type: string
                - name: sex
                  in: query
                  schema:
                    type: string
                    format: bytes
                - name: area
                  in: query
                  schema:
                    type: string
                - name: headImageURL
                  in: query
                  schema:
                    type: string
                    format: bytes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserUpdateInfoResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user_relation/followed:
        get:
            tags:
                - UserRelation
            description: 关注列表
            operationId: UserRelation_GetFollowedList
            parameters:
                - name: userIdentity.userId
                  in: query
                  schema:
                    type: string
                - name: userIdentity.token
                  in: query
                  schema:
                    type: string
                - name: userIdentity.timestampe
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FollowedListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user_relation/follower:
        get:
            tags:
                - UserRelation
            description: 粉丝列表
            operationId: UserRelation_GetFollowerList
            parameters:
                - name: userIdentity.userId
                  in: query
                  schema:
                    type: string
                - name: userIdentity.token
                  in: query
                  schema:
                    type: string
                - name: userIdentity.timestampe
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FollowerListResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/user_relation/set:
        post:
            tags:
                - UserRelation
            description: 关注（互动）
            operationId: UserRelation_SetFollow
            parameters:
                - name: userIdentity.userId
                  in: query
                  schema:
                    type: string
                - name: userIdentity.token
                  in: query
                  schema:
                    type: string
                - name: userIdentity.timestampe
                  in: query
                  schema:
                    type: string
                - name: followedId
                  in: query
                  schema:
                    type: string
                - name: actionType
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetFollowResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        FollowedListResponse:
            type: object
            properties:
                msg:
                    $ref: '#/components/schemas/StatusMsg'
                userList:
                    type: array
                    items:
                        $ref: '#/components/schemas/Users'
        FollowerListResponse:
            type: object
            properties:
                msg:
                    $ref: '#/components/schemas/StatusMsg'
                userList:
                    type: array
                    items:
                        $ref: '#/components/schemas/Users'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        IdentityMsg:
            type: object
            properties:
                userId:
                    type: string
                token:
                    type: string
                timestampe:
                    type: string
        SetFollowResponse:
            type: object
            properties:
                msg:
                    $ref: '#/components/schemas/StatusMsg'
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        StatusMsg:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
                timestampe:
                    type: string
        UserInfoResponse:
            type: object
            properties:
                status:
                    $ref: '#/components/schemas/StatusMsg'
                user:
                    $ref: '#/components/schemas/Users'
        UserListResponse:
            type: object
            properties:
                status:
                    $ref: '#/components/schemas/StatusMsg'
                userList:
                    type: array
                    items:
                        $ref: '#/components/schemas/Users'
        UserLoginResponse:
            type: object
            properties:
                status:
                    $ref: '#/components/schemas/StatusMsg'
                IdentityMsg:
                    $ref: '#/components/schemas/IdentityMsg'
        UserRegisterResponse:
            type: object
            properties:
                status:
                    $ref: '#/components/schemas/StatusMsg'
                IdentityMsg:
                    $ref: '#/components/schemas/IdentityMsg'
        UserUpdateInfoResponse:
            type: object
            properties:
                status:
                    $ref: '#/components/schemas/StatusMsg'
        Users:
            type: object
            properties:
                uid:
                    type: string
                userName:
                    type: string
                followCount:
                    type: string
                followerCount:
                    type: string
                isFollow:
                    type: boolean
                userIntro:
                    type: string
                headImageURL:
                    type: string
                    format: bytes
tags:
    - name: UserBasic
    - name: UserRelation
